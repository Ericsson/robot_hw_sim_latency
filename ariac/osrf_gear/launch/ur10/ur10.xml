<?xml version="1.0"?>
<launch>
  <arg name="limited" default="false"/>
  <arg name="gazebo_namespace" default="/gazebo" />
  <arg name="set_robot_description" default="true" />
  <!-- This is typically used to pass initial joint states for the arm into this file. -->
  <arg name="extra_spawn_model_args" default="
        -J shoulder_pan_joint 0
        -J shoulder_lift_joint -1.13
        -J elbow_joint 1.51
        -J wrist_1_joint 3.77
        -J wrist_2_joint -1.51
        -J wrist_3_joint 0" />

  <!-- send robot urdf to param server -->
  <param if="$(arg set_robot_description)" name="robot_description"
         command="$(find xacro)/xacro.py '$(find osrf_gear)/launch/ur10/ur10_with_vacuum_gripper.urdf.xacro' use_effort_interface:=true" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model"
        args="
          -gazebo_namespace $(arg gazebo_namespace)
          -urdf
          -param robot_description
          -model robot
          $(arg extra_spawn_model_args)
          -x 0.0
          -y -0.0
          -z -0.0
          "
        respawn="false" output="screen">
  </node>

  <!-- Undo this and use files from ur_gazebo when changes merged upstream. -->
  <!-- <include file="$(find ur_gazebo)/launch/controller_utils.launch"/> -->
  <include file="$(find osrf_gear)/vendor/ur_gazebo/launch/controller_utils.launch"/>

  <rosparam file="$(find osrf_gear)/launch/ur10/arm_controller_ur10_custom.yaml" ns="ariac" command="load"/>
  <node name="arm_controller_spawner" pkg="controller_manager" type="spawner"
        args="ariac/arm" respawn="false" output="screen"/>

</launch>
